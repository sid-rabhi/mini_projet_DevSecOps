name: staticwebsite CI/CD Pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

env:
  APP_NAME: staticwebsite
  APP_CONTAINER_PORT: 80
  APP_EXPOSED_PORT: 80

jobs:
  # 1. Checkout Code
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  # 2. SonarQube Code Quality Scan
  test-sonarqube-connection:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Test connection to SonarQube
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: curl -v $SONAR_HOST_URL

  run-sonarscanner:
    runs-on: ubuntu-latest
    needs: test-sonarqube-connection
    steps:
      - uses: actions/checkout@v4
      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # 3. Build Docker Image
  build-image:
    runs-on: ubuntu-latest
    needs: run-sonarscanner
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: |
          docker build -t $APP_NAME .
          docker save $APP_NAME > $APP_NAME.tar
      - uses: actions/upload-artifact@v4
        with:
          name: staticwebsite-tar
          path: staticwebsite.tar

  # 4. Trivy Security Scan
  trivy-scan:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar
      - name: Install Trivy
        run: |
          curl -sfL -o /tmp/trivy.tar.gz https://github.com/aquasecurity/trivy/releases/download/v0.45.0/trivy_0.45.0_Linux-64bit.tar.gz
          tar xz -C /usr/local/bin -f /tmp/trivy.tar.gz
          trivy --version
      - name: Scan Docker image with Trivy
        run: |
          docker load < staticwebsite.tar
          trivy image --exit-code 1 --severity HIGH,CRITICAL --format json -o trivy-report.json $APP_NAME || echo "Trivy scan completed with vulnerabilities"
        continue-on-error: true
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  # 5. Acceptance Test
  acceptance-test:
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar
      - name: Load Docker image and run container
        run: |
          docker load < staticwebsite.tar
          docker run -d -p $APP_EXPOSED_PORT:$APP_CONTAINER_PORT --env PORT=$APP_CONTAINER_PORT --name webapp $APP_NAME
          sleep 5
          curl http://localhost:$APP_CONTAINER_PORT | grep -i "Dimension"

  # 6. Release to GitHub Container Registry
  release-image:
    runs-on: ubuntu-latest
    needs: acceptance-test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar
      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Tag and push Docker image
        run: |
          docker load < staticwebsite.tar
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag $APP_NAME ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA
          docker push ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA

  # 7. Deploy to EC2
  deploy-ec2:
    runs-on: ubuntu-latest
    needs: release-image
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar
      - name: Copy Docker image to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "staticwebsite.tar"
          target: "/home/ec2-user"
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker load < staticwebsite.tar
            docker stop webapp || true
            docker rm webapp || true
            docker run -d -p 80:80 --name webapp staticwebsite

  # 8. Send Email Report
  send-email-report:
    runs-on: ubuntu-latest
    needs: deploy-ec2
    steps:
      - uses: actions/checkout@v4
      - name: Download Trivy Report
        uses: actions/download-artifact@v4
        with:
          name: trivy-report
      - name: Send Email with Trivy Report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "âœ… staticwebsite Deployment & Security Report"
          body: |
            Deployment to EC2 completed successfully.

            Please find the attached Trivy vulnerability scan report for the Docker image.
          to: ${{ secrets.RECIPIENT_EMAIL }}
          from: ${{ secrets.SMTP_USERNAME }}
          attachments: trivy-report.json
