name: CI Pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  APP_NAME: staticwebsite
  APP_CONTAINER_PORT: 80
  APP_EXPOSED_PORT: 80
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t $APP_NAME .
          docker save $APP_NAME > $APP_NAME.tar

      - uses: actions/upload-artifact@v4
        with:
          name: staticwebsite-tar
          path: staticwebsite.tar

  acceptance-test:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar

      - name: Load Docker image and run container
        run: |
          docker load < staticwebsite.tar
          docker run -d -p $APP_EXPOSED_PORT:$APP_CONTAINER_PORT --env PORT=$APP_CONTAINER_PORT --name webapp $APP_NAME
          sleep 5
          curl http://localhost:$APP_CONTAINER_PORT | grep -i "Dimension"

  trivy-scan:
    runs-on: ubuntu-latest
    needs: acceptance-test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar

      - name: Install Trivy
        run: |
          echo "Downloading Trivy..."
          curl -sfL -o /tmp/trivy.tar.gz https://github.com/aquasecurity/trivy/releases/download/v0.45.0/trivy_0.45.0_Linux-64bit.tar.gz
          tar xz -C /usr/local/bin -f /tmp/trivy.tar.gz
          trivy --version

      - name: Scan Docker image with Trivy
        run: |
          docker load < staticwebsite.tar
          trivy image --exit-code 1 --severity HIGH,CRITICAL --format json -o trivy-report.json $APP_NAME || echo "Trivy scan completed with vulnerabilities"
        continue-on-error: true  # Allow the pipeline to continue even if Trivy exits with code 1

      - name: Upload Trivy Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  test-sonarqube-connection:
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - name: Test connection to SonarQube
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          curl -v $SONAR_HOST_URL

  run-sonarscanner:
    runs-on: ubuntu-latest
    needs: test-sonarqube-connection
    steps:
      - uses: actions/checkout@v4

      - name: Install Java 17
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk
          java -version  # Verify Java 17 installation

      - name: Install SonarScanner
        run: |
          curl -sSLo /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip /tmp/sonar-scanner.zip -d /tmp
          mv /tmp/sonar-scanner-4.8.0.2856-linux /usr/local/sonar-scanner
          echo 'export PATH=$PATH:/usr/local/sonar-scanner/bin' >> $GITHUB_ENV

      - name: Run SonarScanner with Debug Logging
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -X  # Enable debug logging

  release-image:
    runs-on: ubuntu-latest
    needs: run-sonarscanner
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staticwebsite-tar

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag and Push Docker image
        run: |
          docker load < staticwebsite.tar
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag $APP_NAME ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA
          docker push ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA

  send-email-report:
    runs-on: ubuntu-latest
    needs: release-image
    steps:
      - uses: actions/checkout@v4

      - name: Download Trivy Report
        uses: actions/download-artifact@v4
        with:
          name: trivy-report

      - name: Send Email with Trivy Report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}  
          server_port: ${{ secrets.SMTP_PORT }}  
          username: ${{ secrets.SMTP_USERNAME }}  
          password: ${{ secrets.SMTP_PASSWORD }}  
          subject: "Trivy Vulnerability Scan Report"
          body: "Please find the attached Trivy vulnerability scan report for the Docker image."
          to: ${{ secrets.RECIPIENT_EMAIL }}
          from: ${{ secrets.SMTP_USERNAME }}
          attachments: trivy-report.json