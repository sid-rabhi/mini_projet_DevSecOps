name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  APP_NAME: staticwebsite
  APP_CONTAINER_PORT: 80
  APP_EXPOSED_PORT: 80

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t $APP_NAME .
          docker save $APP_NAME > $APP_NAME.tar

      - uses: actions/upload-artifact@v4
        with:
          name: app-tar
          path: staticwebsite.tar

  acceptance-test:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-tar

      - name: Load and Run Docker image
        run: |
          docker load < staticwebsite.tar
          docker run -d -p $APP_EXPOSED_PORT:$APP_CONTAINER_PORT --env PORT=$APP_CONTAINER_PORT --name webapp $APP_NAME
          sleep 5
          curl http://localhost:$APP_CONTAINER_PORT | grep -i "Dimension"

  release-image:
    runs-on: ubuntu-latest
    needs: acceptance-test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-tar

      - name: Tag and Push Docker image
        run: |
          docker load < staticwebsite.tar
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag $APP_NAME ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/$REPO_LOWERCASE:$GITHUB_SHA
